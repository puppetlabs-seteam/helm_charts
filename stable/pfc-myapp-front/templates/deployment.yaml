apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "pfc_myapp_front.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "pfc_myapp_front.name" . }}
    helm.sh/chart: {{ include "pfc_myapp_front.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "pfc_myapp_front.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pfc_myapp_front.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        volumeMounts:
          - mountPath: /var/www/html/uploads
            name: {{ .Values.storage.volumename }}
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mysqldb.db }}
              name: {{ .Values.mysqldb.secret }}
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mysqldb.user }}
              name: {{ .Values.mysqldb.secret }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: {{ .Values.mysqldb.pass }}
              name: {{ .Values.mysqldb.secret }}
        - name: MYSQL_SVC
          value: {{ .Values.mysqldb.svc }}
      volumes:
      - name: {{ .Values.storage.volumename }}
        persistentVolumeClaim:
          claimName: {{ .Values.storage.pvc }}